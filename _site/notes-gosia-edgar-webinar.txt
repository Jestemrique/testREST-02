



Notes for Gosia and Edgar:

Hi Gosia, Edgar,

Below some notes about the chat we had yesterday about the code.
Link to the GH repo:
https://github.com/Jestemrique/testREST-02

The only parts involved in the demo are the html and js files.
There are 2 html files and 2 JS files:
1.- index.html
It contains the login form and make calls to js to authenticate the user and populate the localStorage object with the projects and dossiers.
Once the user has been autheticated, library.html is loaded.

2.- Library.html
It contains all the js generated html code to render the project tabs and dossiers elements.

3.- MSTRestJS.js
This is a class with different objects and methods in charge of making the calls to our REST API using the js fetch API. This class also maintains the information needed in local storage so the projects, dossiers, etc can be retrieved when moving from one page to another and it eliminates the need to make additional calls to the REST API. The methods of this class are just wrapper for the different REST API endpoints slightly modified to meet the needs for the webinar. The results obtained are not exactly the same as the ones returned by the REST endpoints.

4.- DemoRest.js:
This file makes calls to the methods of MSTRest class to retrieve and present the information about projects and dossiers.

the js files are located in "/assets/js" folder.

The only folder you need is the "_site" folder. You just need to download this folder, set the proper settings in the "mstrInitProps" literal in demoRest.js file to make it work. As you can see below, it's self explanatory, you just have to set the host and paths where the REST API is located.
const mstrInitProps = {
  host: 'localhost',
  port: 8080,
  loginMode: 1,
  restApiUrl: 'http://localhost:8080/Library111U2/api',
  libraryAppUrl: 'http://localhost:8080/Library111U2/app',
  persistLocalStorage: true
};
